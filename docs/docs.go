// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ipfs/deleteObject": {
            "post": {
                "description": "deleteObjec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deleteObjec"
                ],
                "summary": "deleteObjec",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/ipfs/getObject/{cid}": {
            "post": {
                "description": "getObject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getObject"
                ],
                "summary": "getObject",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "sign",
                        "name": "sign",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cid",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/ipfs/listObject/": {
            "post": {
                "description": "listObjects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listObjects"
                ],
                "summary": "listObjects",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "objs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/ipfs/putObject/": {
            "post": {
                "description": "put object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PutObj"
                ],
                "summary": "put object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "did",
                        "name": "did",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "requestID",
                        "name": "requestID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sign",
                        "name": "sign",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "area",
                        "name": "area",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "525": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/login{cid}": {
            "get": {
                "description": "GetSession",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetSession"
                ],
                "summary": "GetSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "did",
                        "name": "did",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/buySpace": {
            "post": {
                "description": "get buy space tx hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuySpace"
                ],
                "summary": "BuySpace",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BuySpace",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/buyTraffic": {
            "post": {
                "description": "get buy traffic tx hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BuyTraffic"
                ],
                "summary": "BuyTraffic",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BuyTraffic",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/cashSpace": {
            "get": {
                "description": "cashSpace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashSpace"
                ],
                "summary": "cashSpace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cashSpace",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/cashTraffic": {
            "get": {
                "description": "cashTraffic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cashTraffic"
                ],
                "summary": "cashTraffic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cashTraffic",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/deleteObject": {
            "post": {
                "description": "deleteObjec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deleteObjec"
                ],
                "summary": "deleteObjec",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getAllowance": {
            "post": {
                "description": "getAllowance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getAllowance"
                ],
                "summary": "getAllowance",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getAllowance",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getBalance": {
            "post": {
                "description": "getBalance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getBalance"
                ],
                "summary": "getBalance",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "balance",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getObject/{cid}": {
            "post": {
                "description": "getObject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getObject"
                ],
                "summary": "getObject",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "sign",
                        "name": "sign",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "cid",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getReceipt": {
            "get": {
                "description": "checkReceipt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkReceipt"
                ],
                "summary": "checkReceipt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "receipt",
                        "name": "receipt",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cashSpace",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getSpaceCheck": {
            "post": {
                "description": "getSpaceCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getSpaceCheck"
                ],
                "summary": "getSpaceCheck",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getSpaceCheck",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getSpaceInfo": {
            "post": {
                "description": "getSpaceInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getSpaceInfo"
                ],
                "summary": "getSpaceInfo",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getSpaceInfo",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getSpacePrice/": {
            "get": {
                "description": "getSpacePrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getSpacePrice"
                ],
                "summary": "getSpacePrice",
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getTrafficCheck": {
            "post": {
                "description": "getTrafficCheck",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getTrafficCheck"
                ],
                "summary": "getTrafficCheck",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getTrafficCheck",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getTrafficInfo": {
            "post": {
                "description": "getTrafficInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getTrafficInfo"
                ],
                "summary": "getTrafficInfo",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getTrafficInfo",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/getTrafficPrice/": {
            "get": {
                "description": "getTrafficPrice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getTrafficPrice"
                ],
                "summary": "getTrafficPrice",
                "responses": {
                    "200": {
                        "description": "getTrafficPrice",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/listObject/": {
            "post": {
                "description": "listObjects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listObjects"
                ],
                "summary": "listObjects",
                "parameters": [
                    {
                        "description": "body",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "objs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/putObject/": {
            "post": {
                "description": "put object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PutObj"
                ],
                "summary": "put object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "did",
                        "name": "did",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "requestID",
                        "name": "requestID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature",
                        "name": "signature",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sign",
                        "name": "sign",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "area",
                        "name": "area",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "525": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/mefs/recharge": {
            "post": {
                "description": "recharge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recharge"
                ],
                "summary": "recharge",
                "parameters": [
                    {
                        "description": "b",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "value",
                        "name": "value",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getApproveTsHash",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Refresh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Refresh"
                ],
                "summary": "Refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    },
                    "521": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/logs.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "logs.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "httpstatusCode": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MiddleWare API",
	Description:      "This is a middleware server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
